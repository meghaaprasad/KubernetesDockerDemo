apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-scripts
data:
  initdb.sql: |
    CREATE DATABASE IF NOT EXISTS bookmanagementdb;
    USE bookmanagementdb;

    CREATE TABLE IF NOT EXISTS books (
        id INT NOT NULL AUTO_INCREMENT,
        title VARCHAR(255) NOT NULL,
        author VARCHAR(255) NOT NULL,
        language VARCHAR(255) DEFAULT NULL,
        created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
        created_by VARCHAR(255) DEFAULT NULL,
        updated_at DATETIME DEFAULT CURRENT_TIMESTAMP,
        updated_by VARCHAR(255) DEFAULT NULL,
        PRIMARY KEY (id)
    );

    INSERT INTO books (title, author, language)
    SELECT 'Book 1', 'Author 1', 'English'
    UNION ALL SELECT 'Book 2', 'Author 2', 'Hindi'
    UNION ALL SELECT 'Book 3', 'Author 3', 'French'
    UNION ALL SELECT 'Book 4', 'Author 4', 'French'
    UNION ALL SELECT 'Book 5', 'Author 5', 'French'
    UNION ALL SELECT 'Book 6', 'Author 6', 'French'
    UNION ALL SELECT 'Book 7', 'Author 7', 'French'
    UNION ALL SELECT 'Book 8', 'Author 8', 'French'
    UNION ALL SELECT 'Book 9', 'Author 9', 'French'
    UNION ALL SELECT 'Book 10', 'Author 10', 'French'
    WHERE NOT EXISTS (
        SELECT 1 FROM books
    );

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
spec:
  serviceName: mysql
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - name: mysql
          image: mysql:latest
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: mysql_root_password
            - name: MYSQL_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: db-config
                  key: mysql_database
          ports:
            - containerPort: 3306
          volumeMounts:
            - name: mysql-persistent-storage
              mountPath: /var/lib/mysql
            - name: mysql-scripts-volume
              mountPath: /docker-entrypoint-initdb.d
              readOnly: true
      volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: mysql-pvc-claim
        - name: mysql-scripts-volume
          configMap:
            name: mysql-scripts